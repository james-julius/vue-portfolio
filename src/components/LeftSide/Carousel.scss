@use "sass:math";
@import './iPhoneSVGs.scss';

// Number of images
$n: 5;
// Safari is a little bitch and won't handle the apothem properly. To resolve this, we need to manually calculate the --apothem property below so that the carousel
// also works in Safari. We 
$PI: 3.141592653589793;
$theta: 2 * $PI / $n;
// Spacing between the images. This is halved as it will be used on the left and right of each image
$item-spacing: 50px;
// Z-Index
$viewer-distance: 1500px;
// $item-height: var(--item-width) * var(--iPhone11Ratio);
$apothem: 25vw / (2 * (math.tan($PI / $n))) * 1.05;

// Carousel configuration
// We set some variables as CSS variables because they need to be changed by media queries
:root {
    --iPhone11Ratio: 1.9;
    --item-width: 25vw;
    --item-height: calc(25vw * 1.9);
    --apothem: calc(25vw / (2 * (0.726542528)) * 1.05);
}

@media (max-width: 750px) {
    :root {
        --item-width: 22vw;
        --item-height: calc(22vw * 1.9);
    }
    // var(--item-height): var(--item-width) * var(--iPhone11Ratio);
}
.carousel {
    width: 100%;
    height: 100%;
    max-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    perspective: $viewer-distance;
    align-items: center;
    padding: 20px;
    > * {
        flex: 0 0 auto;
    }
    figure {
        // width: var(--item-width);
        margin-bottom: auto;
        transform-style: preserve-3d;
        transition: 2s ease;
        transform-origin: 50% 50% (-$apothem);
        // NOTE: This does not work on safari. 
        // To remedy that, we remove the transform origin property,
        // and translateZ the first image in the Carousel.vue component.
        div {
            height: var(--item-height);
            width: var(--item-width);
        }
        .img-container {
            height: var(--item-height);
            width: var(--item-width);
            background-repeat: no-repeat;
            background-size: contain;
            z-index: 2;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            &:not(:first-of-type) {
                position: absolute;
                left: 0;
                top: 0;
                transform-origin: 50% 50% (-$apothem);
                // opacity: 0.9;
            }
            @for $i from 2 through $n {
                &:nth-child(#{$i}) {
                    transform: rotateY(-#{($i - 1) * $theta}rad);
                }
            }
            iframe {
                display: none;
            }
            .loading-spinner {
                position: absolute;
                height: 100%;
                width: 100%;
                top: 0;
                left: 0;
                display: flex;
                align-items: center;
                justify-content: center;
                z-index: 5;
                border-radius: 80px;
                background-color: var(--leftSide-bgColor);
            }
            // The active class decides if we're using an iframe, or a still image
            img, iframe {
                position: relative;
                top: 0.6%;
                left: 1%;
                height: 95.5%;
                width: 93%;
                z-index: 6;
                border-radius: 25px;
            }
            &.active {
                img {
                    display: none;
                }
                iframe {
                    display: block;
                    // z-index: 4;
                }
            }
            .scrim, .visitSiteButton {
                display: none;
            }
            &:not(.active) {
                &:hover {
                    .scrim {
                        display: block;
                        position: absolute;
                        top: 0;
                        left: 0;
                        height: 100%;
                        width: 100%;
                        pointer-events: none;
                        background-color: #333;
                        opacity: 0.2;
                        z-index: 5;
                        border-radius: 15%;
                        transition: 2s ease-in-out;
                    }
                    .visitSiteButton {
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        font-weight: bold;
                        position: absolute;
                        height: 7%;
                        width: 50%;
                        top: 45%;
                        z-index: 6;
                        background-color: whitesmoke;
                        border-radius: 15px;
                        cursor: pointer;
                        &:hover {
                            background-color: rgb(236, 236, 236);
                        }
                    }
                }
            }
            // iPhone layers sandwich the image or iframe to make it look authentic
            &:before {
                content: $iphone-back;
                position: absolute;
                height: calc(var(--item-height) * .9);
                width: var(--item-width);
                top: 3px;
                left: 0;
                z-index: 0;
            }
            &:after {
                content: $iphone-front;
                position: absolute;
                height: var(--item-height);
                width: var(--item-width);
                top: 0;
                left: 0;
                z-index: 10;
                pointer-events: none;
            }
        }
    }
}